<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.1">
<procedure name="test_barcode">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="ImageCrop" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c></c>
<c>** 测试用</c>
<l>* NumFailure := 0</l>
<l>Failure := 0</l>
<l>flagSeg := 0</l>
<l>flagCrop := 0</l>
<c></c>
<l>flagFind := 1</l>
<c></c>
<c>** Init</c>
<l>get_image_size (Image, Width, Height)</l>
<c>*** 增强算法</c>
<c>** 分割纸张</c>
<l>if (flagSeg == 1)</l>
<l>     image_seg_paper (Image, paper, WindowHandle, 1)</l>
<l>    get_image_size (paper, paperWidth, paperHeight)</l>
<c>    </c>
<c>    </c>
<l>*     dev_display (Image)</l>
<l>*     scale_image (Image, Image, 1.8, -100)</l>
<l>*     binary_threshold (Image, Region, 'max_separability', 'dark', UsedThreshold)</l>
<l>    Image := paper</l>
<l>endif</l>
<c>*** 检测二维码/分割二维码</c>
<l>if (flagCrop == 1)</l>
<l>    image_seg_bar (Image, ImageCrop, BarRow, BarCol)</l>
<c></c>
<c></c>
<l>endif</l>
<c>* 再处理</c>
<c>*对barcode没用</c>
<l>* illuminate (ImageCrop, ImageCrop, 101, 101, 1)</l>
<l>* emphasize (ImageCrop, ImageCrop, 3, 3, 1)</l>
<c>* Motion 管用</c>
<l>simulate_motion (Image, MovedImage, 60, 90, 3)</l>
<l>convert_image_type (MovedImage, Image, 'byte')</l>
<l>*  stop()</l>
<c>* 缩小画幅</c>
<c>* 裁剪1/4区域方法识别条码    27/118</c>
<l>*     gen_rectangle1 (Rectangle, 0, paperWidth/2, paperHeight/3, paperWidth)</l>
<l>*     reduce_domain(paper,Rectangle,Mask)      //裁剪区域</l>
<l>*     crop_domain(Mask, paper)                  //切割图像 </l>
<c>** 检测二维码区域</c>
<c></c>
<c></c>
<c></c>
<c></c>
<l>if (flagFind == 1)  </l>
<c>   ** Init Barcode这行代码放到初始化位置,函数最上边,打开相机之前</c>
<l>*    create_bar_code_model ([], [], BarCodeHandle)</l>
<l>    set_current_dir ('C:/Users/iwake/OneDrive - wake/Desktop/HalconPractise/HalconProj/Barcode')</l>
<l>    read_bar_code_model ('BarCodeHandle.bcm', BarCodeHandle)</l>
<c>    </c>
<l>*    read_bar_code_model ('BarCodeHandle0605.bcm', BarCodeHandle)</l>
<l>*    set_bar_code_param (BarCodeHandle, 'check_char', 'present')</l>
<l>*    set_bar_code_param (BarCodeHandle, 'quiet_zone',true)</l>
<l>*    set_bar_code_param (BarCodeHandle, 'timeout', 50) </l>
<l>*    set_bar_code_param (BarCodeHandle, 'majority_voting', true) </l>
<l>    set_bar_code_param (BarCodeHandle, 'num_scanlines', 30) </l>
<l>*    set_bar_code_param (BarCodeHandle, 'start_stop_tolerance', 'low') </l>
<l>*    set_bar_code_param (BarCodeHandle, 'contrast_min', 2) </l>
<l>*    set_bar_code_param (BarCodeHandle, 'timeout', 50) </l>
<c>** Recognition Barcode这行代码什么时候想识别二维码放到那里,输入Image,BarCodeHandle, WindowHandle,</c>
<c>**输出SymbolRegions,DecodedDataStrings, BarcodeLocation</c>
<l>    image_get_bar (Image, SymbolRegions, BarCodeHandle, WindowHandle, DecodedDataStrings, BarcodeLocation)</l>
<l>endif</l>
<c></c>
<l>* stop()</l>
<l>return ()</l>
</body>
<docu id="test_barcode">
<parameters>
<parameter id="Image"/>
<parameter id="ImageCrop"/>
<parameter id="WindowHandle"/>
</parameters>
</docu>
</procedure>
</hdevelop>
